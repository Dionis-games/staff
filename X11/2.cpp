#include <stdio.h>
#include <stdlib.h>
#include <X11/Xlib.h>
#include <unistd.h>             /* sleep(), etc.  */
#include <cstring>

/* From http://commons.wikimedia.org/wiki/File:2008-07-25_Geese_over_00.svg
   Creative Commons BY-SA */
#define goose_width 32
#define goose_height 31
static const unsigned char goose_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1c,
   0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x80, 0x0f,
   0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xe0, 0x07,
   0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0xfc, 0x01,
   0x00, 0x00, 0xfc, 0x01, 0x00, 0x07, 0xfe, 0x01, 0x10, 0x07, 0xff, 0x00,
   0x78, 0x0e, 0xff, 0x00, 0x80, 0x9f, 0x7f, 0x00, 0x00, 0xfe, 0x3f, 0x00,
   0x00, 0xfc, 0x1f, 0x00, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xf0, 0x0f, 0x00,
   0x00, 0xe0, 0x3f, 0x00, 0x00, 0x80, 0xff, 0x01, 0x00, 0x00, 0xf8, 0x01,
   0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };

#define hexagons_width 30
#define hexagons_height 18
static unsigned char hexagons_bits[] = {
   0x08, 0x80, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00,
   0x04, 0x00, 0x01, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
   0x01, 0x00, 0x04, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x3f,
   0x01, 0x00, 0x04, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x02, 0x00,
   0x02, 0x00, 0x02, 0x00, 0x04, 0x00, 0x01, 0x00, 0x04, 0x00, 0x01, 0x00,
   0x08, 0x80, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00};


#define test_width 100
#define test_height 100
static unsigned char test_bits[] = {
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0xf0, 0x7f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0x07, 0x00, 0xc0, 0x0f, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0xf0, 0x7f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0x07, 0x00, 0xc0, 0x0f, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00,
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0xf0, 0x7f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0x07, 0x00, 0xc0, 0x0f, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0xf0, 0x7f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0x07, 0x00, 0xc0, 0x0f, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0xf0, 0x7f, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0x07, 0x00, 0xc0, 0x0f, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x08, 0x80, 0x00, 0x00, 0x02, 0x20, 0x00, 0x80, 0x00, 0x08, 0x00, 0x20, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x04, 0x00, 0x01, 0x00, 0x01, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x20, 0x00, 0x08, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00, 
   0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00, 
   0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x01, 0x10, 0x00, 0x40, 0x00, 0x04, 0x00};



void windowinit(Display *display, Window *window) {
    int screennum = DefaultScreen(display);
    long background = WhitePixel(display, screennum);
    long foreground = BlackPixel(display, screennum);
    *window = DefaultRootWindow(display);
//= XCreateSimpleWindow(display, DefaultRootWindow(display), 10, 10, 800, 600, 2, foreground, background);
    XMapRaised(display, *window);
    XSync(display, False);

    /* Register for events */
    XSelectInput(display, *window, ButtonPressMask|ButtonReleaseMask|ExposureMask|ButtonMotionMask|KeyPressMask);
}

int main(void) {
    Display* display;
    Window window;
    GC gc;
    Pixmap k;
XFontStruct* myFont;

    /* Open display from $DISPLAY, handle errors */
    if(!(display = XOpenDisplay(NULL))) {
        fprintf(stderr, "Cannot connect to X display\n");
        return EXIT_FAILURE;
    }

    /* Set up window */
    windowinit(display, &window);

    /* Creat GC, handel errors */
    if((int)(gc = XCreateGC(display, window, 0, 0)) < 0) {
        fprintf(stderr, "XCreateGC: \n");
        return EXIT_FAILURE;
    }

myFont = XLoadQueryFont(display,"-misc-fixed-medium-r-normal--9-90-75-75-c-60-iso10646-1");


//XSetFont(display, gc, myFont->fid);


XSetBackground(display, gc, WhitePixel(display, DefaultScreen(display)));

    /* Draw image -- why does this draw a black rectangle ?? */
    k = XCreateBitmapFromData(display, DefaultRootWindow(display), hexagons_bits, hexagons_width, hexagons_height);
//    XCopyPlane(display, i, window, gc, 0, 0, hexagons_width, hexagons_height, 0, 0, 1);


   int i, j;

      for(i=0; i<60; i++) {
        for(j=0; j<80; j++) {
          
  XCopyPlane(display, k, window, gc, 0, 0, hexagons_width, hexagons_height, j*hexagons_width, i*hexagons_height,1);

/*       XCopyPlane(dpy, bitmap, root, gc,
                    0, 0,
                    bitmap_width, bitmap_height,
                    j*bitmap_width, i*bitmap_height,
                    1);
*/

	//XSync(display, False);
          //usleep(100000);
        }
      }






XDrawString(display, window, gc, 10, 10, "Test", strlen("Test"));


    XSync(display, False);
    //sleep(3);

    /* Cleanup */
    XFreeGC(display, gc);
    XDestroyWindow(display, window);
    XCloseDisplay(display);

    return EXIT_SUCCESS;
}
